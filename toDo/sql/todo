Reception de Teste:
+ TABLES:
    ! cv_candidate
    + test_candidate_result: label
    + test_candidate: id_candidate, id_test, date_reception, file, score, id_result

+ MODELS:
    + TestCandidateResult[test_candidate_result]
        + all(): TestCandidateResult[]
        + get_empty(): TestCandidateResult
        + get_valid(): TestCandidateResult
        + get_invalid(): TestCandidateResult
    + TestCandidate[test_candidate]
        + create()
        ?+ update()

+ VIEWS:
    + test-candidate/form:
        + form: candidate, test, file, date-reception

+ CONTROLLERS:
    + TestCandidateController:
        [ Test::all(), Candidate::all() ] -> test-candidate/form
        test-candidate/form.form@submit -> TestCandidate::create()

Liste de Testes:
+ MODELS:
    + TestCandidate
        + all(): TestCandidate[]
        + delete()

- VIEWS:
    - test-candidate/list:
        - table: $action, candidate, post, date-reception, test-title, score, state
                $action = case session(role):
                    rh: [delete, validate]
                    communication: [communicate]

+ CONTROLLERS:
    + TestCandidateController
        + TestCandidate::all() -> test-candidate/list
        + test-candidate/list.table@delete -> TestCandidate::delete()

Upload de Testes:
PART 1
+ TABLES:
    + test: title, goal, requirements

+ MODELS:
    + Test[test]
        + create()
        + find(id)

+ VIEWS:
    + test/form1:
        + form: title, goal, requirement...

+ CONTROLLERS:
    + TestController:
        + Test::find(session(test)) -> test/form1
        + test/form1.form@submit -> Test::create() | Test::update()

PART 2
+ TABLES:
    + test_part: content, duration, test

+ MODELS:
    + TestPart[test_part]
        + create()

+ VIEWS:
    + test/form2:
        + form: content..., duration...

+ CONTROLLERS:
    + TestController:
        + Test::find(session(test)) -> test/form2
        + test/form2.form@submit -> TestPart::create()


PART 3
+ TABLES:
    + test_point: label, test_point_importance, test
    + test_point_importance: label
    + test_criterion: label, coefficient, test

+ MODELS:
    + TestPointImportance[test_point_importance]:
        + all(): TestPointImportance[]
    + TestPoint[test_point]
        + create()
    + TestCriterion[test_criterion]
        + create()

+ VIEWS:
    + test/form3:
        + form3: test-point..., test-point-importance..., test-criterion..., coefficient...

+ CONTROLLERS:
    + TestController:
        + Test::find(session(test)) -> test/form2
        + test/form3.form@submit -> Test::create()

Notation de Teste:
- MODELS:
- VIEWS:
- CONTROLLERS:

Communication d'Excuses | Entretien:
- MODELS:
- VIEWS:
- CONTROLLERS:
